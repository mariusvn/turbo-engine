name: build

on: [push]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/out/build/standard
      
    - name: Install Dependencies
      shell: bash
      run: sudo add-apt-repository ppa:allegro/5.2 && sudo apt-get install liballegro*5.2 liballegro*5-dev

    - name: Configure CMake
      shell: bash
      working-directory: ${{github.workspace}}/out/build/standard
      run: cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=$BUILD_TYPE

    - name: Build
      working-directory: ${{github.workspace}}/out/build/standard
      shell: bash
      run: cmake --build . --config $BUILD_TYPE
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: lib-files-ubuntu
        path: ${{github.workspace}}/out/build/standard/libturbo_engine.so

  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v2
      
    - name: Create Build Environment
      run: cmake -E make_directory ${{github.workspace}}/out/build/standard
      
    - name: Install Dependencies
      shell: pwsh
      run: |
        Invoke-WebRequest https://github.com/liballeg/allegro5/releases/download/5.2.6.0/allegro-x86_64-w64-mingw32-gcc-9.2.0-posix-seh-dynamic-5.2.6.0.zip -OutFile ./allegro.zip && 7z x allegro.zip -oallegro
      working-directory: ${{github.workspace}}/out/build/standard
      
    - name: Configure CMake
      shell: pwsh
      working-directory: ${{github.workspace}}/out/build/standard
      run: cmake ${{github.workspace}} -DCMAKE_BUILD_TYPE=$BUILD_TYPE -DLIBALLEG_PATH="out/build/standard/allegro/allegro" -G "MinGW Makefiles"
      
    - name: Build
      working-directory: ${{github.workspace}}/out/build/standard
      shell: pwsh
      run: |
        cmake --build . --config $BUILD_TYPE
      
    - name: Processing files
      working-directory: ${{github.workspace}}/out/build/standard
      shell: pwsh
      run: |
        mkdir res
        mkdir res/include
        cp -r allegro/allegro/include/* res/include
        cp -r ../../../include/* res/include
        mkdir res/bin
        cp *.dll res/bin
        mkdir res/lib
        cp *.a res/lib
        ls res
        ls res/bin
        ls res/include
        ls res/lib
        mv res turbo-engine-win
    
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: lib-files-win
        path: |
          ${{github.workspace}}/out/build/standard/turbo-engine-win
